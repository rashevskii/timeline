[{"/home/stepan/timeline/src/index.js":"1","/home/stepan/timeline/src/CustomTimeline.jsx":"2","/home/stepan/timeline/src/generate-fake-data.js":"3","/home/stepan/timeline/src/ModalAddPoint.jsx":"4","/home/stepan/timeline/src/HeaderApp.jsx":"5"},{"size":10228,"mtime":1616757868749,"results":"6","hashOfConfig":"7"},{"size":1697,"mtime":1616757297748,"results":"8","hashOfConfig":"7"},{"size":1494,"mtime":1611230806783,"results":"9","hashOfConfig":"10"},{"size":2146,"mtime":1616755877560,"results":"11","hashOfConfig":"7"},{"size":563,"mtime":1616585201280,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"kegsks",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"8bpa6s",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/stepan/timeline/src/index.js",["29","30","31","32","33","34","35","36","37","38"],"import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\nimport CustomTimeline from \"./CustomTimeline\";\nimport ModalAddPoint from \"./ModalAddPoint\";\nimport HeaderApp from \"./HeaderApp\";\nimport \"react-calendar-timeline/lib/Timeline.css\";\nimport \"./style.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const groups = [\n      { id: 1, title: \"\" },\n    ];\n  \n    const items = [];\n\n    const user = \"\";\n    const id_user = 0;\n    const is_admin = false;\n\n    const defaultTimeStart = moment().startOf(\"day\").toDate();\n    const defaultTimeEnd = moment().startOf(\"day\").add(1, \"day\").toDate();\n\n    this.state = {\n      groups,\n      items,\n      user,\n      defaultTimeStart,\n      defaultTimeEnd,\n      showModal: false,\n      selected: moment().startOf(\"date\").toDate(),\n      editing: false,\n      currentItemId: \"\",\n    };\n\n    this.setNewLock = this.setNewLock.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleSelectDay = this.handleSelectDay.bind(this);\n    this.handleSetNewData = this.handleSetNewData.bind(this);\n    this.handleIsEditing = this.handleIsEditing.bind(this);\n    this.handleEditData = this.handleEditData.bind(this);\n    this.handleGetDate = this.handleGetDate.bind(this);\n  }\n/**\n * Первый запрос данных при загрузке приложени\n * Данные: данные о пользователе, все пользователи, вся бронь\n * \n */\n  componentDidMount() {\n    fetch(\"http://samaradrift.ru/api\", {\n      method: 'POST',\n      body: JSON.stringify({\n        action: 'getUser',\n      })\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      if(data.data.priv == \"1\") {\n        this.setState({is_admin: data.data.priv});  \n      }\n      this.setState({user: data.data.name});\n      this.setState({id_user: +data.data.id});\n    } )\n    .catch(err => console.log(err));\n\n    fetch(\"http://samaradrift.ru/api\", {\n      method: 'POST',\n      body: JSON.stringify({\n        action: 'getUsers',\n      })\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      this.setState({groups: data.data})\n    })\n\n    fetch(\"http://samaradrift.ru/api\", {\n      method: 'POST',\n      body: JSON.stringify({\n        action: 'getReserv',\n      })\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(data => {\n      let item = [];\n      data.data.forEach(el => {\n        item.push({\n          id: +el.id,\n          group: +el.user,\n          title: el.user_name,\n          start: +el.date_begin,\n          end: +el.date_end,\n        })\n      });\n      this.setState({items: item});\n    } )\n    .catch(err => console.log(err));\n  }\n\n  /**\n   * Получение данных, их валидация и установка а модальном окне\n   * @param {number} id \n   */\n  handleGetDate(id) {\n    if(id) {\n      fetch(\"http://samaradrift.ru/api\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({\n          action: 'getReserv',\n          ids: id,\n        })\n      }).then(response => {\n        return response.json();\n      }).then(res => {\n        if(this.state.id_user == +res.data[0].user) {\n          this.handleOpenModal();\n          const timeFrom = moment(+res.data[0].date_begin).format(\"LT\");\n          const timeTo = moment(+res.data[0].date_end).format(\"LT\");\n          let timeFromArray = timeFrom.split(\":\");\n          let timeToArray = timeTo.split(\":\");\n          let zero = \"0\";\n          if(timeFromArray[0].length < 2 && timeToArray[0].length == 2) {\n            timeFromArray[0] = zero + timeFromArray[0];\n            let currentTimeFrom = timeFromArray.join(\":\");\n            document.querySelector(\"#timeFrom\").value = currentTimeFrom;\n            document.querySelector(\"#timeTo\").value = timeTo;\n          } else if(timeFromArray[0].length < 2 && timeToArray[0].length < 2) {\n            timeFromArray[0] = zero + timeFromArray[0];\n            timeToArray[0] = zero + timeToArray[0];\n            let currentTimeFrom = timeFromArray.join(\":\");\n            let currentTimeTo = timeToArray.join(\":\");\n            document.querySelector(\"#timeFrom\").value = currentTimeFrom;\n            document.querySelector(\"#timeTo\").value = currentTimeTo;\n          } else if(timeFromArray[0].length == 2 && timeToArray[0].length < 2) {\n            timeToArray[0] = zero + timeToArray[0];\n            let currentTimeTo = timeToArray.join(\":\");\n            document.querySelector(\"#timeFrom\").value = timeFrom;\n            document.querySelector(\"#timeTo\").value = currentTimeTo;\n          }\n          else {\n            document.querySelector(\"#timeFrom\").value = timeFrom;\n            document.querySelector(\"#timeTo\").value = timeTo;\n          }\n          this.setState({selected: moment(+res.data[0].date_begin).startOf(\"date\").toDate()});\n        }\n      }).catch(err => console.log(err));\n    } else {\n      alert(\"Что-то пошло не так...\");\n    }\n  }\n\n  /**\n   * Установка в стейт флага редактирования и установка id текущей записи\n   * @param {number} id \n   */\n  handleIsEditing(id) {\n    this.setState({editing: true});\n    this.setState({currentItemId: id});\n  }\n\n  /**\n   * Открытие модалки\n   */\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  /**\n   * Закрытие модалки\n   */\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  /**\n   * Установка дня (даты)\n   * @param {string} date \n   */\n  handleSelectDay(date) {\n    this.setState({selected: date});\n  }\n\n  /**\n   * Установка новой записи\n   */\n  handleSetNewData() {\n    let timeTo = document.querySelector(\"#timeTo\").value.split(\":\");\n    let isMidnight = false;\n    if(timeTo[0] == \"00\" && timeTo[1] == \"00\") {\n      isMidnight = true;\n      timeTo = [\"23\", \"59\"];\n    }\n    let data = {\n      id: \"\",\n      group: this.state.id_user,\n      title: this.state.user,\n      start: moment(this.state.selected).add(document.querySelector(\"#timeFrom\").value.split(\":\")[0], \"hours\").add(document.querySelector(\"#timeFrom\").value.split(\":\")[1], \"minutes\").valueOf(),\n      end: isMidnight ? moment(this.state.selected).add(timeTo[0], \"hours\").add(timeTo[1], \"minutes\").valueOf() : \n                        moment(this.state.selected).add(document.querySelector(\"#timeTo\").value.split(\":\")[0], \"hours\").add(document.querySelector(\"#timeTo\").value.split(\":\")[1], \"minutes\").valueOf(),\n    }\n    if(data.end > data.start) {\n      fetch(\"http://samaradrift.ru/api\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n          'action': 'setReserv',\n        },\n        body: JSON.stringify({\n          action: 'setReserv',\n          data: data,\n        })\n      }).then(response => {\n        return response.json();\n      }).then(res => {\n        data.id = res.newid;\n      });\n      this.handleCloseModal();\n      this.setNewLock(data);\n    } else {\n      alert(\"Введите корректное время!\");\n    }\n  }\n\n  /**\n   * Редактирование записи\n   */\n  handleEditData() {\n    let timeTo = document.querySelector(\"#timeTo\").value.split(\":\");\n    let isMidnight = false;\n    if(timeTo[0] == \"00\" && timeTo[1] == \"00\") {\n      isMidnight = true;\n      timeTo = [\"23\", \"59\"];\n    }\n    let data = {\n      id: this.state.currentItemId,\n      group: this.state.id_user,\n      title: this.state.user,\n      start: moment(this.state.selected).add(document.querySelector(\"#timeFrom\").value.split(\":\")[0], \"hours\").add(document.querySelector(\"#timeFrom\").value.split(\":\")[1], \"minutes\").valueOf(),\n      end: isMidnight ? moment(this.state.selected).add(timeTo.join(\".\"), \"hours\").valueOf() : \n                        moment(this.state.selected).add(document.querySelector(\"#timeTo\").value.split(\":\")[0], \"hours\").add(document.querySelector(\"#timeTo\").value.split(\":\")[1], \"minutes\").valueOf(),\n    };\n    if(data.end - data.start > 0) {\n      fetch(\"http://samaradrift.ru/api\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n          'action': 'setReserv',\n        },\n        body: JSON.stringify({\n          action: 'setReserv',\n          data: data,\n        })\n      }).then(response => {\n        return response.json();\n      }).then(res => {\n        console.log(res);\n      });\n      this.handleCloseModal();\n      this.setNewLock(data);\n      this.setState({editing: false});\n    } else {\n      alert(\"Введите корректный диапазон времени!\");\n    }\n  }\n\n  /**\n   * Внесение данных в state\n   * @param {object} data \n   */\n  setNewLock(data) {\n    const items = this.state.items.slice();\n    items.push(data);\n    this.setState({items: items});\n  }\n\n  render() {\n    return (\n      <div>\n        <HeaderApp \n          user={this.state.user} \n          admin={this.state.is_admin}\n        />\n        <CustomTimeline \n          showModal={this.state.showModal}\n          handleCloseModal={this.handleCloseModal}\n          handleOpenModal={this.handleOpenModal}\n          groups={this.state.groups}\n          items={this.state.items}\n          defaultTimeStart={this.state.defaultTimeStart}\n          defaultTimeEnd={this.state.defaultTimeEnd}\n          handleIsEditing={this.handleIsEditing}\n          handleGetDate={this.handleGetDate}\n        />\n        <ModalAddPoint \n          selected={this.state.selected}\n          showModal={this.state.showModal}\n          handleCloseModal={this.handleCloseModal}\n          handleOpenModal={this.handleOpenModal}\n          handleSelectDay={this.handleSelectDay}\n          handleSetNewData={this.handleSetNewData}\n          handleEditData={this.handleEditData}\n          is_edit={this.state.editing}\n         />\n      </div>\n    )\n  }\n}\n\nrender(<App />, document.getElementById(\"root\"));",["39","40"],"/home/stepan/timeline/src/CustomTimeline.jsx",[],"/home/stepan/timeline/src/generate-fake-data.js",["41"],"import faker from 'faker'\nimport randomColor from 'randomcolor'\nimport moment from 'moment'\n\nexport default function (groupCount = 30, itemCount = 1000, daysInPast = 30) {\n  let randomSeed = Math.floor(Math.random() * 1000)\n  let groups = []\n  for (let i = 0; i < groupCount; i++) {\n    groups.push({\n      id: `${i + 1}`,\n      title: faker.name.firstName(),\n      rightTitle: faker.name.lastName(),\n      bgColor: randomColor({ luminosity: 'light', seed: randomSeed + i })\n    })\n  }\n\n  let items = []\n  for (let i = 0; i < itemCount; i++) {\n    const startDate = faker.date.recent(daysInPast).valueOf() + (daysInPast * 0.3) * 86400 * 1000\n    const startValue = Math.floor(moment(startDate).valueOf() / 10000000) * 10000000\n    const endValue = moment(startDate + faker.random.number({ min: 2, max: 20 }) * 15 * 60 * 1000).valueOf()\n\n    items.push({\n      id: i + '',\n      group: faker.random.number({ min: 1, max: groups.length }) + '',\n      title: faker.hacker.phrase(),\n      start: startValue,\n      end: endValue,\n      // canMove: startValue > new Date().getTime(),\n      // canResize: startValue > new Date().getTime() ? (endValue > new Date().getTime() ? 'both' : 'left') : (endValue > new Date().getTime() ? 'right' : false),\n      className: (moment(startDate).day() === 6 || moment(startDate).day() === 0) ? 'item-weekend' : '',\n      itemProps: {\n        'data-tip': faker.hacker.phrase()\n      }\n    })\n  }\n\n  items = items.sort((a, b) => b - a)\n\n  return { groups, items }\n}",["42","43"],"/home/stepan/timeline/src/ModalAddPoint.jsx",["44"],"import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport SimpleReactCalendar from 'simple-react-calendar';\n\nReactModal.setAppElement(\"#root\");\n\nexport default class ExampleApp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  render() {\n    return (\n      <div>\n        <button className=\"button-add app-btn\" onClick={this.props.handleOpenModal}>\n          ЗАБРОНИРОВАТЬ\n        </button>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.props.handleCloseModal}\n          className=\"Modal\"\n          overlayClassName=\"Overlay\"\n        >\n          <button onClick={this.props.handleCloseModal} className=\"btn-close-modal\">+</button>\n          <form>\n            <SimpleReactCalendar \n              activeMonth={new Date()}\n              onSelect={this.props.handleSelectDay}\n              selected={this.props.selected}\n            />\n            <div className=\"timeFrom__wrapper input__wrapper\">\n              <label for=\"timeFrom\">Начало</label>\n              <input type=\"time\" name=\"timeFrom\" id=\"timeFrom\"></input>\n            </div>\n            <div className=\"timeTo__wrapper input__wrapper\">\n              <label for=\"timeTo\">Конец</label>\n              <input type=\"time\" name=\"timeTo\" id=\"timeTo\"></input>\n            </div>\n          </form>\n          <div className=\"button__wrapper\">\n            {this.props.is_edit ? \n            <button onClick={this.props.handleEditData} type=\"submit\" className=\"app-btn\">ПОДТВЕРЖДАЮ</button> :\n            <button onClick={this.props.handleSetNewData} type=\"submit\" className=\"app-btn\">ПОДТВЕРЖДАЮ</button>\n            }\n            <button onClick={this.props.handleCloseModal} type=\"submit\" className=\"close-modal-mobile app-btn\">ЗАКРЫТЬ</button>\n          </div>\n          <div className=\"confirm\">Нажимая кнопку Подтвердить, вы соглашаетесь с договором оферты и попадаете в рабство</div>\n        </ReactModal>\n      </div>\n    );\n  }\n}","/home/stepan/timeline/src/HeaderApp.jsx",["45","46"],"import React from \"react\";\nimport logo from \"./img/logo.png\"\n\n\nexport default class HeaderApp extends React.Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"header__wrapper\">\n        <img src={logo} alt=\"\"></img>\n        <div className=\"login__wrapper\">\n          {this.props.admin ? <a className=\"admin-enter\" href=\"http://samaradrift.ru/cabinet\">Админка</a> : <a href=\"http://samaradrift.ru/cabinet\"></a>}\n          <p className=\"login-name\">{this.props.user}</p>\n          </div>\n      </div>\n    );\n  }\n};",{"ruleId":"47","severity":1,"message":"48","line":21,"column":11,"nodeType":"49","messageId":"50","endLine":21,"endColumn":18},{"ruleId":"47","severity":1,"message":"51","line":22,"column":11,"nodeType":"49","messageId":"50","endLine":22,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":64,"column":25,"nodeType":"54","messageId":"55","endLine":64,"endColumn":27},{"ruleId":"52","severity":1,"message":"53","line":128,"column":31,"nodeType":"54","messageId":"55","endLine":128,"endColumn":33},{"ruleId":"52","severity":1,"message":"53","line":135,"column":67,"nodeType":"54","messageId":"55","endLine":135,"endColumn":69},{"ruleId":"52","severity":1,"message":"53","line":147,"column":45,"nodeType":"54","messageId":"55","endLine":147,"endColumn":47},{"ruleId":"52","severity":1,"message":"53","line":202,"column":18,"nodeType":"54","messageId":"55","endLine":202,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":202,"column":39,"nodeType":"54","messageId":"55","endLine":202,"endColumn":41},{"ruleId":"52","severity":1,"message":"53","line":243,"column":18,"nodeType":"54","messageId":"55","endLine":243,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":243,"column":39,"nodeType":"54","messageId":"55","endLine":243,"endColumn":41},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":1,"nodeType":"62","endLine":41,"endColumn":2},{"ruleId":"56","replacedBy":"63"},{"ruleId":"58","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":8,"column":3,"nodeType":"67","messageId":"68","endLine":10,"endColumn":4},{"ruleId":"65","severity":1,"message":"66","line":6,"column":3,"nodeType":"67","messageId":"68","endLine":8,"endColumn":4},{"ruleId":"69","severity":1,"message":"70","line":15,"column":109,"nodeType":"71","endLine":15,"endColumn":149},"no-unused-vars","'id_user' is assigned a value but never used.","Identifier","unusedVar","'is_admin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["72"],["73"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]